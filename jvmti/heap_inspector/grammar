Voici la grammaire d'un dump HeapInspector 

all:="~~FIELDS~~\n" field_desc* "~~ARRAYS~~\n" array_desc* "~~STRING~~\n" string_desc*

field_desc:= class ";{\n" object_tag  "{\n" object_field* "}"

class := JAVA_CLASS_SIGNATURE

object_tag := INT // identifiant unique de l'objet

object_field := field_index "{" type_and_val "(static)"? "(is_array)"? "}\n"
//static est afficher si le champs est static
//array est afficher si le champs représente un objet de type tableau

field_index := INT //index du champs

type_and_val := ("OBJECT" object_tag) ||
                ("INT" int_value) ||
                ("LONG" long_value) ||
                ("FLOAT" float_value) ||
                ("DOUBLE" double_value)

int_value := INT

float_value := FLOAT

long_value := LONG

double_value := DOUBLE

array_desc := object_tag "[" array_size "]{\n" array_el "}"
//object_tag contient le tag de l'objet représentant le tableau
//array_size représente la taille du tableau courant

array_el := "[" array_index "]:" type_and_val  "\n"

array_size := INT
//représente la taille d'un tableau

array_index := INT
//représente un index dans un tableau

string_desc := object_tag ":{" jchar* "}\n" 

jchar := SHORT ";"
//un short est un entier 16 bits.
//les carateres java sont codées 
